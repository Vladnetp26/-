1. Главные компоненты (PCA) формируются из исходных данных посредством линейных преобразований. PCA является статистическим инструментом, предназначенным для снижения размерности данных, при этом сохраняя наибольшее количество информации.
   Это достигается путем создания новых осей (главных компонент), которые представляют собой линейные комбинации исходных переменных и максимизируют дисперсию данных.
   Каждая главная компонента независима от других и расположена таким образом, что первая компонента объясняет наибольшую долю дисперсии, вторая — следующую по величине и так далее.

2. Для приблизительного определения степени сжатия данных нужно рассчитать соотношение между размерностью восстановленных данных и исходных данных.
   Исходная матрица данных имеет размер (4250, 7), а после восстановления с применением трех главных компонентов ее размер становится (4250, 3). Соотношение размерностей составляет 3/7 ≈ 0,43. Следовательно, можно утверждать, что сжатие данных приблизительно равно 43%.

3. В Python можно применить следующий код для создания данных в форме эллипса с определенными параметрами:

```python
import numpy as np

num_points = 1100
center = np.array([1.5, -2.5])
radii = np.array([3, 2.5])
angle = 65 * np.pi / 180

# Генерация точек эллипса
angles = np.linspace(0, 2 * np.pi, num_points)
X = np.array([radii[0] * np.cos(angles), radii[1] * np.sin(angles)]).T

# Поворот эллипса
rotation_matrix = np.array([[np.cos(angle), -np.sin(angle)],
                            [np.sin(angle), np.cos(angle)]])
X_rotated = X @ rotation_matrix

# Перенос центра эллипса
X_final = X_rotated + center

# Вычисление собственных значений и собственных векторов
cov_matrix = np.cov(X_final.T)
eigenvalues, eigenvectors = np.linalg.eig(cov_matrix)

# Важные характеристики
max_value = max(eigenvalues)
min_value = min(eigenvalues)
print("Максимальное значение:", max_value)
print("Минимальное значение:", min_value)
```

 4. В Python можно применить следующий код для изучения весов главных компонент набора данных Cars, используя числовые характеристики:

```python
import pandas as pd
from sklearn.decomposition import PCA

# Загрузка данных
cars_data = pd.read_csv("cars.csv")

# Выполнение PCA
pca = PCA(n_components=5)
pca_result = pca.fit_transform(cars_data)

# Получение весов главных компонент
weights = pca.components_

# Определение параметра с наименьшим вкладом в первую главную компоненту
weights_first_component = weights[0]
smallest_weight_param = cars_data.columns[np.argmin(np.abs(weights_first_component))]
print("Параметр с наименьшим вкладом в первую главную компоненту:", smallest_weight_param)
```
Замените "cars.csv" на путь к вашему файлу с данными о машинах. Этот код отобразит признак с наименьшим влиянием на первую главную компоненту.
