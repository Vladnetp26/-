1. Оцените евклидово расстояние между векторами x1 {2, 5, 3 ,7} и x2 {2, 7, 1, 5}.
 
Для решения будем использовать библиотеку "numpy"

```python
import numpy as np

x1 = np.array([2, 5, 3, 7])
x2 = np.array([2, 7, 1, 5])

euclidean_distance = np.sqrt(np.sum((x1 - x2) ** 2))
print(f"Евклидово расстояние: {euclidean_distance:.2f}")
```

Вывод:
```
Евклидово расстояние: 3.46
```

 2. Оцените расстояние Чебышева между векторами x1 {0, 10, 4, 9} и x2 {3, 7, 0, 2}.
 
Для решения будем использовать библиотеку "numpy"

```python
x1 = np.array([0, 10, 4, 9])
x2 = np.array([3, 7, 0, 2])

chebyshev_distance = np.max(np.abs(x1 - x2))
print(f"Расстояние Чебышева: {chebyshev_distance}")
```

Вывод:
```
Расстояние Чебышева: 7
```

3. Есть три центроида c1 {1, 0, 0}, c2 {0, 1, 1}, c3{1, 0, 1} и точка x с координатами {2, 0, 2}. К какому кластеру следует отнести эту точку при использовании евклидовой метрики расстояния?

Для решения будем использовать библиотеку "numpy"

```python
c1 = np.array([1, 0, 0])
c2 = np.array([0, 1, 1])
c3 = np.array([1, 0, 1])
x = np.array([2, 0, 2])

distances = [np.sqrt(np.sum((x - c) ** 2)) for c in [c1, c2, c3]]
nearest_cluster = np.argmin(distances) + 1

print(f"Точка x принадлежит кластеру {nearest_cluster}")
```

Вывод:
```
Точка x принадлежит кластеру 3
```

 4. Как называется метод определения оптимального числа k (кластеров) с использованием анализа инерции?
Способ выявления наилучшего количества кластеров k посредством изучения инерции данных известен как метод локтя (elbow method). 

Вот пример его применения:

```python
from sklearn.cluster import KMeans
from sklearn.datasets import make_blobs
import matplotlib.pyplot as plt

# Генерация случайных данных
X, _ = make_blobs(n_samples=1000, centers=4, random_state=42)

inertias = []
k_range = range(1, 11)

for k in k_range:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X)
    inertias.append(kmeans.inertia_)

plt.figure(figsize=(8, 5))
plt.plot(k_range, inertias, 'bo-')
plt.xlabel('Число кластеров k')
plt.ylabel('Инерция')
plt.title('Метод локтя')
plt.show()
```
Данный код создает случайные данные, использует метод k-means с различным количеством кластеров и строит график, отражающий зависимость инерции от числа кластеров k. 
На графике следует отыскать заметный изгиб (локоть), который обозначает оптимальное количество кластеров.
